// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Company {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  website     String?
  jobs        Job[]    @relation("CompanyJobs")
  createdAt   DateTime @default(now())
}

model Job {
  id             Int       @id @default(autoincrement())
  title          String
  description    String
  company        Company   @relation("CompanyJobs", fields: [companyId], references: [id])
  companyId      Int
  location       String
  companyLogoUrl String?   @default("https://cdn-icons-png.flaticon.com/512/1465/1465405.png")
  minSalary      Int?
  maxSalary      Int?
  postedAt       DateTime  @default(now())
  expiresAt      DateTime?
  employer       User      @relation("JobEmployer", fields: [employerId], references: [id])
  employerId     String
  applicants     User[]    @relation("JobApplicants")
  jobType        JobType   @default(FULL_TIME)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(APPLICANT)
  createdAt     DateTime  @default(now())
  jobsApplied   Job[]     @relation("JobApplicants")
  jobsPosted    Job[]     @relation("JobEmployer")
  accounts      Account[]
  sessions      Session[]
}

enum Role {
  APPLICANT
  EMPLOYER
}

enum JobType {
  FULL_TIME
  PART_TIME
  INTERNSHIP
  CONTRACT
  FREELANCE
}
