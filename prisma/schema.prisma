generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Company {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  website     String?
  createdAt   DateTime @default(now())
  jobs        Job[]    @relation("CompanyJobs")
}

model Job {
  id             Int       @id @default(autoincrement())
  title          String
  description    String
  companyId      Int
  location       String
  minSalary      Int?
  maxSalary      Int?
  postedAt       DateTime  @default(now())
  expiresAt      DateTime?
  employerId     String
  jobType        JobType   @default(FULL_TIME)
  companyLogoUrl String?   @default("https://cdn-icons-png.flaticon.com/512/1465/1465405.png")
  company        Company   @relation("CompanyJobs", fields: [companyId], references: [id])
  employer       User      @relation("JobEmployer", fields: [employerId], references: [id])
  applicants     User[]    @relation("JobApplicants")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  role          Role      @default(APPLICANT)
  createdAt     DateTime  @default(now())
  emailVerified DateTime?
  image         String?
  name          String?
  accounts      Account[]
  jobsPosted    Job[]     @relation("JobEmployer")
  sessions      Session[]
  jobsApplied   Job[]     @relation("JobApplicants")
}

enum Role {
  APPLICANT
  EMPLOYER
}

enum JobType {
  FULL_TIME
  PART_TIME
  INTERNSHIP
  CONTRACT
  FREELANCE
}
